filter {
  if [type] == "syslog" {
    grok {
      match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
    }
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    }
  } else if [type] == "apache" {
    grok {
      match => { "message" => "%{COMBINEDAPACHELOG}" }
    }
    date {
      match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
    }
  } else if [type] == "heartbeat" {
    mutate {
      add_field => { "[@metadata][zabbix_key]" => "logstash.heartbeat" }
      add_field => { "[@metadata][zabbix_host]" => "{{ ansible_host }}" }
    }
  } else if [type] == "openshift" {
    mutate {
      rename => { "[docker][image]" => "docker_image" }
      rename => { "[docker][image_id]" => "docker_image_id" }
      rename => { "[docker][labels][io.kubernetes.pod.name]" => "pod_name" }
      rename => { "[docker][labels][io.kubernetes.pod.namespace]" => "project_name" }
      rename => { "[docker][name]" => "container_name" }
      lowercase => [ "project_name", "os_cluster_name" ]
    }
    if ![project_name] {
      mutate {
        add_field => { "project_name" => "empty" }
      }
    } else {
      mutate {
        remove_field => [ "docker" ]
      }
    }
    if [project_name] == "finanzas-dev" or [project_name] == "finanzas-cua" {
      grok {
        match => { "log" => "(?<fecha>\d\d\d\d-\d\d-\d\d\s\d\d:\d\d:\d\d.\d\d\d)\s*(?<severidad>\b\w+\b)\s*(\[(?<servicio>\w+),(?<corralation_id>\w*),(?<transaction_id>\w*),\w*\])?\s*\d\s*---\s*\[(?<thread_id>[\w-]+)\]\s*(?<componente>[\w\.]+)\s*:\s*(?<msg>.*)" }
      }
      if [componente] == "c.c.m.g.c.filters.RestServicesLogFilter" {
        grok {
          match => { "msg" => "\w*\s*=>(?<json_msg>{.*})\s*" }
          remove_field=>["msg"]
        }
        json { 
          source => "json_msg"
          remove_field=>["json_msg"]
        }
        grok {
          match => { "URL" => "(/\w+/)*(?<funcion>\w+)$" }
        }
      }
      if [componente] == "c.c.m.g.service.impl.RestServiceBase" {
        grok {
          match => { "msg" => "\w*\[(?<response_code>\d*)\].*" }
          remove_field=>["msg"]
          add_field => { "[@metadata][zabbix_key]" => "facturas.responsecode" }
          add_field => { "[@metadata][zabbix_host]" => "test_facturas" }
        }
      }
    }
  }
}
